"use client";

import Image from "next/image";
import paginationRightArrow from "/public/images/right-arrow-pagination.png";

/**
 * @description `Pagination` 컴포넌트는 페이지네이션 UI를 생성합니다.
 * 사용자는 페이지 번호를 클릭하여 원하는 페이지로 이동할 수 있으며, 페이지 이동 시 `setPage` 함수를 호출합니다.
 *
 * @typedef {Object} TPaginationProps
 * @property {number} limit - 한 페이지에 표시할 항목 수.
 * @property {number} totalPage - 전체 페이지 수.
 * @property {number} page - 현재 페이지 번호.
 * @property {React.Dispatch<React.SetStateAction<number>>} setPage - 페이지 번호를 설정하는 함수.
 *
 * @param {TPaginationProps} props - 페이지네이션 관련 속성을 전달받습니다.
 * @returns {JSX.Element} 페이지네이션 컴포넌트를 반환합니다.
 */

type TPaginationProps = {
  limit: number;
  totalPage: number;
  page: number;
  setPage: React.Dispatch<React.SetStateAction<number>>;
};

function Pagination({ setPage }: TPaginationProps): JSX.Element {
  return (
    <>
      <div className="flex justify-center gap-2">
        {/* 왼쪽 화살표 버튼 (비활성화된 상태) */}
        {/* <button className="hover:bg-background-purpleLight flex h-9 w-9 items-center justify-center hover:rounded-[4px]">
          <Image
            src={"/images/left-arrow-pagination.png"}
            alt="right"
            width={24}
            height={24}
          />
        </button> */}
        {/* 페이지 번호 버튼들 */}
        {Array(10)
          .fill(0)
          .map((_, index) => (
            <button
              onClick={() => setPage(index + 1)}
              key={index}
              className="h-9 w-9 text-center text-base text-neutral-80 hover:rounded-[4px] hover:bg-background-purpleLight"
            >
              {index + 1}
            </button>
          ))}
        {/* 오른쪽 화살표 버튼 */}
        <button className="flex h-9 w-9 items-center justify-center hover:rounded-[4px] hover:bg-background-purpleLight">
          <Image
            src={paginationRightArrow}
            alt="right"
            width={24}
            height={24}
          />
        </button>
      </div>
    </>
  );
}

export default Pagination;
