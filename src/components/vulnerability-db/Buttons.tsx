"use client";

import { useHotNewStore } from "@/store/useHotNewState";
/**
 * @description "HOT" 및 "NEW" 버튼을 표시하고, 각 버튼을 클릭했을 때 상태를 관리하는 UI 컴포넌트.
 *
 * @typedef {Object} TButtonProps - 버튼 상태를 관리하는 객체의 타입 정의
 * @property {boolean} hot - "HOT" 버튼의 활성화 여부를 나타냄
 * @property {boolean} new - "NEW" 버튼의 활성화 여부를 나타냄
 *
 * @returns {JSX.Element} "HOT" 및 "NEW" 버튼을 포함한 컴포넌트를 반환
 */

type TButtonProps = {
  hot: boolean;
  new: boolean;
};

function Buttons(): JSX.Element {
  const { isHot, isNew, setIsHot, setIsNew } = useHotNewStore();

  const onClickHot = () => {
    setIsHot();
  };

  const onClickNew = () => {
    setIsNew();
  };

  return (
    <>
      <div className="flex gap-3 text-xs">
        <button
          className={`rounded-full ${isHot ? "bg-system-warning text-white" : "bg-neutral-10 text-neutral-40"} px-3 py-[6px] font-semibold`}
          onClick={onClickHot}
        >
          HOT
        </button>
        <button
          className={`rounded-full ${isNew ? "bg-system-assist text-white" : "bg-neutral-10 text-neutral-40"} px-3 py-[6px] font-semibold`}
          onClick={onClickNew}
        >
          NEW
        </button>
      </div>
    </>
  );
}

export default Buttons;
