"use client";

import Image from "next/image";
import { useState } from "react";
import rightArrow from "/public/images/right-arrow.png";
import Link from "next/link";
import { useVulnerabilityStore } from "@/store/useVulnerabilityStore";

/**
 * @description 상위 3개의 취약성 보고서를 보여주는 UI 컴포넌트.
 *              각 보고서는 마우스 호버에 따라 크기가 조절되며, 클릭 시 상세 페이지로 이동합니다.
 *
 * @typedef {Object} TTopThreeData - 각 아이템의 ID, 제목, 날짜를 포함한 데이터 타입 정의
 * @property {number} id - 아이템의 고유 ID
 * @property {string} title - 아이템의 제목
 * @property {string} date - 아이템의 생성 날짜
 *
 * @typedef {Object} BoxState - 컴포넌트의 상태를 정의하는 타입
 * @property {number} id - 현재 활성화된 아이템의 ID
 * @property {boolean} containerState - 컨테이너 전체에 대한 상태 (마우스 호버 여부)
 * @property {boolean} state - 개별 아이템에 대한 상태 (마우스 호버 여부)
 *
 * @returns {JSX.Element} 상위 3개의 아이템을 표시하는 컴포넌트를 반환
 */

export type TTopThreeData = {
  id: number;
  title: string;
  date: string;
};

function TopThreeItem() {
  const [hoveredItemId, setHoveredItemId] = useState<number | null>(null);

  // topThreeData 필터링
  const { data } = useVulnerabilityStore();
  const topThreeData = [...data].sort((a, b) => b.view - a.view).slice(0, 3);

  return (
    <>
      <div className="mt-[27px] flex gap-7">
        {topThreeData?.map((item, index) => (
          <Link
            href={`/vulnerability-db/${item.id}`}
            key={item.id}
            onMouseEnter={() => setHoveredItemId(item.id)}
            onMouseLeave={() => setHoveredItemId(null)}
            className={`relative h-[300px] rounded-[20px] transition-all duration-300 ease-in-out ${
              hoveredItemId === item.id ||
              (hoveredItemId === null && index === 0)
                ? "w-[50%] scale-105"
                : "w-[25%]"
            } ${
              index === 0
                ? "bg-[url('/images/db-bg-image-1.png')]"
                : index === 1
                  ? "bg-[url('/images/db-bg-image-2.png')]"
                  : "bg-[url('/images/db-bg-image-3.png')]"
            } bg-cover`}
          >
            <div className="absolute bottom-0 flex h-full w-full items-end justify-between rounded-[20px] bg-gradient-to-t from-black/70 p-5">
              <div className="flex w-[75%] flex-col gap-2">
                <h1
                  className={`transition-all duration-300 ease-in-out ${
                    hoveredItemId === item.id ? "text-lg" : "text-[13px]"
                  } font-semibold text-white`}
                >
                  {item.title}
                </h1>
                <p
                  className={`transition-all duration-300 ease-in-out ${
                    hoveredItemId === item.id ? "text-sm" : "text-[8px]"
                  } text-neutral-50`}
                >
                  {item.date}
                </p>
              </div>
              <button
                className={`absolute right-4 flex h-[42px] w-[42px] items-center justify-center rounded-full bg-white/70 transition-opacity duration-300 ease-in-out ${
                  hoveredItemId === item.id ? "opacity-100" : "opacity-0"
                }`}
              >
                <Image src={rightArrow} alt="arrow" width={28} height={28} />
              </button>
            </div>
          </Link>
        ))}
      </div>
    </>
  );
}

export default TopThreeItem;
