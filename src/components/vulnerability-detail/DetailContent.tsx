"use client";

import { useState } from "react";
import Chips from "@/components/vulnerability-db/Chips";
import Image from "next/image";
import pin from "/public/images/pin.png";
import pinActive from "/public/images/pin-active.png";
import shareBox from "/public/images/share-box.png";
import { SimilarDataList } from "./detaildummydata";
import { useParams } from "next/navigation";

/**
 * @description 취약성 뉴스의 상세 내용을 표시하는 컴포넌트.
 *              뉴스 제목, 세부 정보, 그리고 관련 버튼(핀 및 공유) 및 내용을 포함합니다.
 *
 * @returns {JSX.Element} 취약성 뉴스의 제목, 세부 정보 및 내용을 포함한 컴포넌트를 반환
 */

type TPinState = {
  id: number;
  state: boolean;
};

function DetailContent(): JSX.Element {
  const params = useParams();
  const [isPinned, setIsPinned] = useState<TPinState>({ id: 0, state: false });
  const detailData = SimilarDataList.filter(
    (item) => item.id === Number(params.id),
  );

  const handlePinState = (id: number) => {
    setIsPinned((prev) => ({ id: id, state: !prev.state }));
  };

  const handleShareLink = () => {
    const link = `${location.href}`;

    if (navigator.share) {
      navigator.share({ url: link });
    } else {
      navigator.clipboard.writeText(link);
      alert("링크가 복사되었습니다.");
    }
  };

  return (
    <>
      {detailData.map((item) => {
        const description = item.description
          .replace(/(\u00A0\s?\u00A0|\u00A0)/g, "\n\n")
          .replace(/(?=\d+\.)/g, `\n\n`);

        return (
          <div key={item.id}>
            <div className="flex flex-col gap-3 border-b border-neutral-30 pb-[30px]">
              <div className="flex flex-col gap-3">
                <Chips>HOT</Chips>
                <h1 className="text-[21px]">{item.title}</h1>
              </div>
              <div className="flex justify-between">
                <div className="flex gap-5 text-sm text-neutral-40">
                  <span>취약성 뉴스 세부 정보</span>
                  <span>출시 시간 | 2024.03.08 13:30:24</span>
                </div>
                <div className="flex gap-5">
                  <button onClick={() => handlePinState(item.id)}>
                    {Number(params.id) === isPinned.id && isPinned.state ? (
                      <Image
                        src={pinActive}
                        width={18}
                        height={18}
                        alt="pin-active"
                      />
                    ) : (
                      <Image src={pin} width={18} height={18} alt="pin" />
                    )}
                  </button>
                  <button onClick={handleShareLink}>
                    <Image src={shareBox} width={18} height={18} alt="share" />
                  </button>
                </div>
              </div>
            </div>
            <div className="border-b border-neutral-30 pb-[30px] pt-[30px]">
              <div className="w-full px-2">
                <div className="whitespace-pre-wrap">{description}</div>
              </div>
            </div>
          </div>
        );
      })}
    </>
  );
}
export default DetailContent;
