"use client";

import Image from "next/image";
import React, { useState } from "react";
import searchIcon from "../../../public/images/magnifying-glass.svg";
import { usePathname, useSearchParams } from "next/navigation";
import { useRouter } from "next/navigation";
import addOrUpdateRealTimeTopic from "@/firebase/addOrUpdateRealTimeTopic";

/**
 * @description `SearchBar` 컴포넌트는 사용자가 검색어를 입력할 수 있는 검색창을 제공합니다. 검색어가 입력되면 해당 검색어를 URL 쿼리 파라미터에 추가하여 검색을 수행하며, 페이지 번호는 항상 1로 초기화됩니다.
 *
 * @returns {JSX.Element} 검색창 컴포넌트를 반환합니다.
 */
function SearchBar(): JSX.Element {
  const [query, setQuery] = useState<string>("");
  const searchParams = useSearchParams();
  const pathname = usePathname();
  const router = useRouter();

  /**
   * @description 검색어를 입력받아 URL의 쿼리 파라미터에 반영하는 함수입니다.
   * 검색어를 입력하면 항상 `page=1`로 설정됩니다.
   */
  const handlerSearch = async () => {
    if (query !== "") {
      await addOrUpdateRealTimeTopic(query);
    }
    const params = new URLSearchParams(searchParams);
    // 검색어가 있으면 'search' 파라미터 설정, 없으면 삭제
    query ? params.set("search", query) : params.delete("search");
    // 검색어 입력 시 항상 page=1로 설정
    params.set("page", "1");
    // 검색어와 페이지 값이 반영된 새로운 URL로 대체
    router.replace(`${pathname}?${params.toString()}`);
  };

  /**
   * @description 사용자가 Enter 키를 눌렀을 때 검색어를 처리하는 함수입니다.
   */
  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === "Enter") {
      handlerSearch();
    }
  };

  /**
   * @description 사용자가 검색 버튼을 클릭했을 때 검색어를 처리하는 함수입니다.
   */
  const handleOnClick = () => {
    handlerSearch();
  };

  return (
    <div className="flex items-center rounded-[14px] border border-[#6000ff] p-2">
      <input
        type="text"
        value={query}
        onChange={(e) => setQuery(e.target.value)}
        onKeyDown={handleKeyDown}
        placeholder="검색어를 입력해주세요."
        className="flex-grow p-2 outline-none"
      />
      <button onClick={handleOnClick}>
        <Image alt="돋보기 아이콘" src={searchIcon} width={32} height={32} />
      </button>
    </div>
  );
}

export default SearchBar;
